#---------------------------------#
#      environment configuration  #
#---------------------------------#
version: 1.0.0.{build}
install:
    - ps: |
        Install-PackageProvider -Name NuGet -MinimumVersion 2.8.5.201 -Force
        Install-Module -Name Pester -Repository PSGallery -Force
        cmd /c reg add HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\system /v LocalAccountTokenFilterPolicy /t REG_DWORD /d 1 /f
        Restart-Service WinRM
#---------------------------------#
#      build configuration        #
#---------------------------------#

build: false

#---------------------------------#
#      test configuration         #
#---------------------------------#

test_script:
    - ps: |
        Import-Module .\Remotely.psd1
        $testResultsFile = ".\TestsResults.xml"
        $res = Invoke-Pester -OutputFormat NUnitXml -OutputFile $testResultsFile -PassThru
        (New-Object 'System.Net.WebClient').UploadFile("https://ci.appveyor.com/api/testresults/nunit/$($env:APPVEYOR_JOB_ID)", (Resolve-Path $testResultsFile))
        if ($res.FailedCount -gt 0) {
            throw "$($res.FailedCount) tests failed."
        }
#---------------------------------#
#      deployment configuration   #
#---------------------------------#

# scripts to run before deployment
deploy_script:
  - ps: |
      # Creating project artifact
      $stagingDirectory = (Resolve-Path ..).Path
      $manifest = Join-Path $pwd "Remotely.psd1"
      (Get-Content $manifest -Raw).Replace("1.0.0", $env:APPVEYOR_BUILD_VERSION) | Out-File $manifest
      $zipFilePath = Join-Path $stagingDirectory "$(Split-Path $pwd -Leaf).zip"
      Add-Type -assemblyname System.IO.Compression.FileSystem
      [System.IO.Compression.ZipFile]::CreateFromDirectory($pwd, $zipFilePath)
      @(
          # You can add other artifacts here
          $zipFilePath
      ) | % {
          Write-Host "Pushing package $_ as Appveyor artifact"
          Push-AppveyorArtifact $_
        }